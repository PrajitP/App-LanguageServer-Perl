only = 1
severity = 1

[Bangs::ProhibitBitwiseOperators]
[Perl::Critic::Policy::Bangs::ProhibitDebuggingModules]
[BuiltinFunctions::ProhibitSleepViaSelect]
[BuiltinFunctions::ProhibitStringyEval]
[BuiltinFunctions::RequireGlobFunction]
[ClassHierarchies::ProhibitOneArgBless]
[ControlStructures::ProhibitMutatingListFunctions]
[InputOutput::ProhibitBarewordFileHandles]
[InputOutput::ProhibitInteractiveTest]
[InputOutput::ProhibitTwoArgOpen]
[InputOutput::RequireEncodingWithUTF8Layer]

[Modules::ProhibitEvilModules]
modules = Fatal {Found use of Fatal. Use autodie instead} AS::API::Long_Term {Use AS::API->new(type=>'historical') instead}

[Modules::RequireBarewordIncludes]
[Modules::RequireFilenameMatchesPackage]
[Subroutines::ProhibitExplicitReturnUndef]
[Subroutines::ProhibitNestedSubs]
[Subroutines::ProhibitReturnSort]
[Subroutines::ProhibitSubroutinePrototypes]
[TestingAndDebugging::ProhibitNoStrict]
[TestingAndDebugging::RequireUseStrict]
[ValuesAndExpressions::ProhibitLeadingZeros]
[Variables::ProhibitConditionalDeclarations]
[Variables::RequireLexicalLoopIterators]
[Modules::RequireVersionVar]

#[Subroutines::RequireArgUnpacking]
[TestingAndDebugging::RequireUseStrict]
equivalent_modules =Moo Moo::Role

[TestingAndDebugging::RequireUseWarnings]
equivalent_modules =Moo Moo::Role

[ControlStructures::ProhibitPostfixControls]
allow =  if

[InputOutput::RequireCheckedSyscalls]
exclude_functions=print say close

[NamingConventions::ProhibitAmbiguousNames]
forbid=bases close contract last left no record right second set

#[NamingConventions::Capitalization]
#package_exemptions=.*::Command::.*
#package_exemptions=.*db.*
#constant_exemptions=plugin_search_path

[Subroutines::ProhibitUnusedPrivateSubroutines]
private_name_regex=_(?!trigger_|build_)\w+

